// -------------------------- 1 пункт --------------------------
// -------------------------------------------------------------
// -------------------------------------------------------------

// Условие------------------------------------------------------
// С помощью дженериков сделать обобщенный стор, 
// который хранил бы в хеш таблице данные
//
// Хеш-таблица - это когда данные хранятся в виде ключ значение
// const store = {
//      1: {
//          name: "Ivan",
//          age: 12
//      }
// }
// В этом примере store - это хеш таблица, где по id (ключу объекта), можно получить юзера
// -------------------------------------------------------------

type Store<T extends object> = T[] 

type Programmer = {
    id: number,
    name: string
}

type ProgrammersStore = Store<Programmer>
//
const someEntitiesStore: ProgrammersStore = [
    {
        id: 1,
        name: "Ican",
    },
    {
        id: 2,
        name: "Vasya"
    }
    // ...
]

// -------------------------- 2 пункт --------------------------
// -------------------------------------------------------------
// -------------------------------------------------------------

// Условие------------------------------------------------------
// Используя дженерики нужно обобщить типизацию функции getData, 
// чтобы она стала дженериком. Этот дженерик должен использоваться в возвращаемом типе
// -------------------------------------------------------------

type GetDataReturnValue<T> = {
    data: T
}

function getData<T>(): Promise<GetDataReturnValue<T>> {
    const data: GetDataReturnValue<T> = {

    }

    return Promise.resolve(data)
}

type User = {
    id: number
}

const users = getData<User>()